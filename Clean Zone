use role sysadmin;
use warehouse computewh;
use schema cricket.clean;

select meta['data_version'] :: text as data_version,
       meta['created'] :: date as created,
       meta['revision']:: number as revision
from
     cricket.raw.match_raw_tbl;


select info:match_type_number:: int as match_type_number,
       info:match_type:: text as match_type,
       info:season:: text as season,
       info: team_type :: text as team_type,
       info:overs :: text as overs,
       info:city::text as city,
       info:venue::text as venue
from
    cricket.raw.match_raw_tbl;

create or replace transient table cricket.clean.match_detail_clean as
select
    info:match_type_number::int as match_type_number, 
    info:event.name::text as event_name,
    case
    when 
        info:event.match_number::text is not null then info:event.match_number::text
    when 
        info:event.stage::text is not null then info:event.stage::text
    else
        'NA'
    end as match_stage,   
    info:dates[0]::date as event_date,
    date_part('year',info:dates[0]::date) as event_year,
    date_part('month',info:dates[0]::date) as event_month,
    date_part('day',info:dates[0]::date) as event_day,
    info:match_type::text as match_type,
    info:season::text as season,
    info:team_type::text as team_type,
    info:overs::text as overs,
    info:city::text as city,
    info:venue::text as venue, 
    info:gender::text as gender,
    info:teams[0]::text as first_team,
    info:teams[1]::text as second_team,
    case 
        when info:outcome.winner is not null then 'Result Declared'
        when info:outcome.result = 'tie' then 'Tie'
        when info:outcome.result = 'no result' then 'No Result'
        else info:outcome.result
    end as matach_result,
    case 
        when info:outcome.winner is not null then info:outcome.winner
        else 'NA'
    end as winner,   

    info:toss.winner::text as toss_winner,
    initcap(info:toss.decision::text) as toss_decision,
    --
    stg_file_name ,
    stg_file_row_number,
    stg_file_hashkey,
    stg_modified_ts
    from 
    cricket.raw.match_raw_tbl;

    //extracting players 

    select raw.info:match_type_number:: int as match_type_number,
           raw.info:players,
           raw.info:teams
    from cricket.raw.match_raw_tbl raw
    where match_type_number=4684

    select raw.info:match_type_number:: int as match_type_number,
           --p.*
           p.key:: text as country
    from cricket.raw.match_raw_tbl raw,
    lateral flatten (input => raw.info:players) p
    where match_type_number=4684;
//extracting player names
    select raw.info:match_type_number:: int as match_type_number,
           p.key:: text as country,
           --team.*
           team.value:: text as player_names
    from cricket.raw.match_raw_tbl raw,
    lateral flatten (input => raw.info:players) p,
    lateral flatten ( input=> p.value) team
    where match_type_number=4684;

    //cleaned players table

create or replace table player_clean_tbl as 
select 
    raw.info:match_type_number::int as match_type_number, 
    p.path::text as country,
    team.value:: text as player_name,
    raw.stg_file_name ,
    raw.stg_file_row_number,
    raw.stg_file_hashkey,
    raw.stg_modified_ts
from cricket.raw.match_raw_tbl raw,
lateral flatten (input => raw.info:players) p,
lateral flatten (input => p.value) team;

desc table cricket.clean.player_clean_tbl;

// add not null and fk relationship
alter table cricket.clean.player_clean_tbl
modify column match_type_number set not null;

alter table cricket.clean.player_clean_tbl
modify column country set not null;

alter table cricket.clean.player_clean_tbl
modify column player_name set not null;

alter table cricket.clean.match_detail_clean
add constraint pk_match_type_number primary key (match_type_number);


alter table cricket.clean.player_clean_tbl
add constraint fk_match_id
foreign key(match_type_number)
references cricket.clean.match_detail_clean(match_type_number);

select get_ddl('table','cricket.clean.player_clean_tbl' );

